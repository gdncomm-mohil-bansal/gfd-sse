{
  "info": {
    "name": "Dummy Off2On Redis - SSE Service (Updated)",
    "description": "GFD PWA monitoring service - Validates OTP from Redis and establishes SSE connection to receive real-time events",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_postman_id": "off2on-redis-v2"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8081",
      "type": "string"
    },
    {
      "key": "off2on_url",
      "value": "http://localhost:8080",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "user123",
      "type": "string"
    },
    {
      "key": "otp",
      "value": "",
      "type": "string",
      "description": "OTP generated by Front-liner in dummy-off2on service"
    }
  ],
  "item": [
    {
      "name": "Health & Status",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/health",
              "host": ["{{base_url}}"],
              "path": ["api", "health"]
            }
          }
        },
        {
          "name": "Welcome",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/",
              "host": ["{{base_url}}"],
              "path": ["api", ""]
            }
          }
        }
      ]
    },
    {
      "name": "OTP Validation (OTPs generated in dummy-off2on)",
      "description": "Validate OTPs that were generated by Front-liner in dummy-off2on service",
      "item": [
        {
          "name": "Validate OTP from Redis",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"userId\": \"{{userId}}\",\n    \"otp\": \"{{otp}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/otp/validate",
              "host": ["{{base_url}}"],
              "path": ["api", "otp", "validate"]
            },
            "description": "Validates OTP by reading from Redis. OTP must be generated in dummy-off2on first."
          }
        },
        {
          "name": "Check if OTP Exists in Redis",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/otp/exists/{{otp}}",
              "host": ["{{base_url}}"],
              "path": ["api", "otp", "exists", "{{otp}}"]
            },
            "description": "Check if OTP exists in Redis (debugging/testing)"
          }
        }
      ]
    },
    {
      "name": "SSE Connection Management",
      "description": "Establish and manage SSE connections for real-time event streaming",
      "item": [
        {
          "name": "Connect to SSE (with OTP from Front-liner)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "text/event-stream"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/sse/connect?userId={{userId}}&otp={{otp}}",
              "host": ["{{base_url}}"],
              "path": ["api", "sse", "connect"],
              "query": [
                {
                  "key": "userId",
                  "value": "{{userId}}",
                  "description": "Front-liner's userId"
                },
                {
                  "key": "otp",
                  "value": "{{otp}}",
                  "description": "OTP received from Front-liner"
                }
              ]
            },
            "description": "Establishes SSE connection. OTP is validated from Redis and then invalidated (one-time use)."
          }
        },
        {
          "name": "Disconnect SSE",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/sse/disconnect/{{userId}}",
              "host": ["{{base_url}}"],
              "path": ["api", "sse", "disconnect", "{{userId}}"]
            }
          }
        },
        {
          "name": "Check Connection Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/sse/status/{{userId}}",
              "host": ["{{base_url}}"],
              "path": ["api", "sse", "status", "{{userId}}"]
            }
          }
        },
        {
          "name": "Get Active Connection Count",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/sse/connections/count",
              "host": ["{{base_url}}"],
              "path": ["api", "sse", "connections", "count"]
            }
          }
        }
      ]
    },
    {
      "name": "E2E Test - GFD Flow (Complete)",
      "description": "Complete flow: Get OTP from Front-liner ‚Üí Validate ‚Üí Connect SSE ‚Üí Receive events. Run this AFTER running Front-liner flow in dummy-off2on collection.",
      "item": [
        {
          "name": "Step 0: Generate OTP in dummy-off2on (Front-liner)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json();",
                  "pm.test(\"‚úÖ Step 0: OTP Generated by Front-liner\", function () {",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.otp).to.exist;",
                  "});",
                  "",
                  "if (jsonData.success && jsonData.otp) {",
                  "    pm.collectionVariables.set(\"otp\", jsonData.otp);",
                  "    console.log(\"=====================================\");",
                  "    console.log(\"üì± Front-liner Generated OTP: \" + jsonData.otp);",
                  "    console.log(\"=====================================\");",
                  "    console.log(\"‚úÖ OTP saved to collection variable\");",
                  "    console.log(\"‚û°Ô∏è  Proceed to Step 1\");",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"userId\": \"{{userId}}\",\n    \"deviceInfo\": \"E2E Test - Front-liner App\",\n    \"sessionId\": \"e2e-session-gfd-001\"\n}"
            },
            "url": {
              "raw": "{{off2on_url}}/api/otp/generate",
              "host": ["{{off2on_url}}"],
              "path": ["api", "otp", "generate"]
            },
            "description": "Simulates Front-liner generating OTP. In real scenario, Front-liner displays this OTP to GFD user."
          }
        },
        {
          "name": "Step 1: Validate OTP (GFD)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json();",
                  "pm.test(\"‚úÖ Step 1: OTP Validated Successfully\", function () {",
                  "    pm.expect(jsonData.valid).to.be.true;",
                  "});",
                  "",
                  "console.log(\"‚úÖ OTP is valid in Redis\");",
                  "console.log(\"‚û°Ô∏è  Ready to establish SSE connection\");"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"userId\": \"{{userId}}\",\n    \"otp\": \"{{otp}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/otp/validate",
              "host": ["{{base_url}}"],
              "path": ["api", "otp", "validate"]
            }
          }
        },
        {
          "name": "Step 2: Connect to SSE (Keep this running!)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "text/event-stream"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/sse/connect?userId={{userId}}&otp={{otp}}",
              "host": ["{{base_url}}"],
              "path": ["api", "sse", "connect"],
              "query": [
                {
                  "key": "userId",
                  "value": "{{userId}}"
                },
                {
                  "key": "otp",
                  "value": "{{otp}}"
                }
              ]
            },
            "description": "‚ö†Ô∏è IMPORTANT: Keep this request running in a separate Postman tab!\n\nYou should see:\n- CONNECTION_ESTABLISHED event\n- Heartbeat events every 15 seconds\n- Cart and checkout events from Front-liner\n\nWhile this is running, go to dummy-off2on collection and trigger cart operations."
          }
        },
        {
          "name": "Step 3: Trigger Cart Event (in dummy-off2on)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"‚úÖ Step 3: Cart Event Triggered\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "});",
                  "",
                  "console.log(\"=====================================\");",
                  "console.log(\"üõí Cart event triggered!\");",
                  "console.log(\"=====================================\");",
                  "console.log(\"üì¢ Event published to Redis: CART_ITEM_ADDED\");",
                  "console.log(\"üëÅÔ∏è  Check Step 2 tab - you should see the event!\");",
                  "console.log(\"=====================================\");"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"userId\": \"{{userId}}\",\n    \"productId\": 1,\n    \"quantity\": 2\n}"
            },
            "url": {
              "raw": "{{off2on_url}}/api/cart/add",
              "host": ["{{off2on_url}}"],
              "path": ["api", "cart", "add"]
            }
          }
        },
        {
          "name": "Step 4: Trigger Checkout Event",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"‚úÖ Step 4: Checkout Event Triggered\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.orderId).to.exist;",
                  "});",
                  "",
                  "console.log(\"=====================================\");",
                  "console.log(\"üéâ E2E TEST COMPLETE!\");",
                  "console.log(\"=====================================\");",
                  "console.log(\"‚úÖ OTP generated and validated\");",
                  "console.log(\"‚úÖ SSE connection established\");",
                  "console.log(\"‚úÖ Cart events received via SSE\");",
                  "console.log(\"‚úÖ Checkout event received via SSE\");",
                  "console.log(\"=====================================\");",
                  "console.log(\"üìä Architecture Flow Verified:\");",
                  "console.log(\"  Front-liner ‚Üí dummy-off2on ‚Üí Redis\");",
                  "console.log(\"  Redis ‚Üí dummy-off2on-redis ‚Üí GFD (SSE)\");",
                  "console.log(\"=====================================\");"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"userId\": \"{{userId}}\"\n}"
            },
            "url": {
              "raw": "{{off2on_url}}/api/cart/checkout",
              "host": ["{{off2on_url}}"],
              "path": ["api", "cart", "checkout"]
            }
          }
        },
        {
          "name": "Step 5: Verify OTP Was Invalidated",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json();",
                  "pm.test(\"‚úÖ Step 5: OTP Was Invalidated (One-time use)\", function () {",
                  "    pm.expect(jsonData.data).to.be.false;",
                  "});",
                  "",
                  "console.log(\"‚úÖ OTP no longer exists in Redis\");",
                  "console.log(\"üîí Security: One-time use verified\");"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/otp/exists/{{otp}}",
              "host": ["{{base_url}}"],
              "path": ["api", "otp", "exists", "{{otp}}"]
            },
            "description": "Verifies that OTP was deleted after SSE connection (one-time use security)"
          }
        }
      ]
    }
  ]
}
